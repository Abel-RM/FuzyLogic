FUNCTION_BLOCK notaper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	tiempo : REAL;
	errores : REAL;
	ayudas	: REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	nota : REAL;
END_VAR

FUZZIFY tiempo			// Fuzzify input variable 'tiempo': {'poor', 'good' , 'excellent'}
	TERM rapido := (0, 1) (25,0);
	TERM regular := (23, 0) (30, 1)(45,0);
	TERM lento := (35, 0) (60, 1);
END_FUZZIFY

FUZZIFY errores			// Fuzzify input variable 'errores': { 'rancid', 'delicious' }
	TERM algunos := (0,1) (3,0);
	TERM muchos := (2,0) (5,1);
END_FUZZIFY

FUZZIFY ayudas			// Fuzzify input variable 'errores': { 'rancid', 'delicious' }
	TERM pocas := (0, 1) (3, 0) ;
	TERM algunas := (2,0) (3,1)(4,1)(5,0);
	TERM muchas := (4,0) (10,1);
END_FUZZIFY

DEFUZZIFY nota			// Defzzzify output variable 'nota' : {'cheap', 'average', 'generous' }
	TERM insuficiente := (0,0) (30,1) (60,0);
	TERM promedio := (40,0) (60,1) (80,0);
	TERM buena := (70,0) (85,1) (100,0);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF errores IS muchos THEN nota IS insuficiente;
	RULE 2 : IF tiempo IS lento THEN nota IS insuficiente;
	RULE 3 : IF tiempo IS regular AND errores IS algunos AND ayudas IS algunas THEN nota IS promedio;
	RULE 4 : IF tiempo IS regular AND errores IS algunos AND ayudas IS pocas THEN nota IS promedio;
	RULE 5 : IF tiempo IS regular AND errores IS algunos AND ayudas IS algunas THEN nota IS promedio;
	RULE 6 : IF tiempo IS rapido AND errores IS algunos AND ayudas IS pocas THEN nota IS buena;

END_RULEBLOCK

END_FUNCTION_BLOCK
